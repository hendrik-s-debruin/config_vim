# ============================ Option Completions ========================== {{{

global !p
def complete(t, opts):
	if t:
		opts = [ m[len(t):] for m in opts if m.startswith(t) ]
	if len(opts) == 1:
		return opts[0]
	return '(' + '|'.join(opts) + ')'
endglobal

global !p
def completeRequestType(t):
	opts = [
		"launch",
		"attach",
	]
	return complete(t, opts)
endglobal

global !p
def completeVariableType(t):
	opts = [
		"SIMPLE_VARIABLE",
		"SHELL_INTERPOLATED_VARIABLE",
	]
	return complete(t, opts)
endglobal

global !p
def completeProgramType(t):
	opts = [
		"SIMPLE_PROGRAM",
		"PROGRAM_WITH_ARGS",
	]
	return complete(t, opts)
endglobal

global !p
def completeConsoleType(t):
	opts = [
		"integratedTerminal",
		"externalTerminal",
	]
	return complete(t, opts)
endglobal

global !p
def completeAdatorType(t):
	opts = [
		"vscode-cpptools",
		"debugpy",
		"vscode-bash-debug",
		"local-lua-debugger-vscode",
	]
	return complete(t, opts)
endglobal

global !p
def completeBool(t):
	opts = [
		"true",
		"false",
	]
	return complete(t, opts)
endglobal

# }}}

# ================================= Main Body ============================== {{{

snippet init "Init"
{
	"configurations": {
		CONFIG$0
	}
}
endsnippet

snippet CONFIG "entry for a debug configuration"
"${1:CONFIG_NAME}": {
	"extends": "${2:EXTEND_CONFIG_NAME}",

	"default": $3`!p snip.rv = completeBool(t[3])`,

	"adapter": "$4`!p snip.rv = completeAdatorType(t[4])`",

	"filetypes": [${5:"javascript", "python"}],

	// Variable names must start with caps
	"variables": {
		VAR$6
	},

	"configuration": {

		"request": "$7`!p snip.rv = completeRequestType(t[7])`",

		PROGRAM$8,

		"stopOnEntry": $9`!p snip.rv = completeBool(t[9])`,

		"cwd": ${10:"${workspaceRoot}"},

		"console": "$11`!p snip.rv = completeConsoleType(t[11])`",

		"env": {
			VAR$12
		}
	},

	"breakpoints": {
		"exception": {
			"caught": "",
			"uncaught": "Y"
		}
	}
},

CONFIG$0
endsnippet

# }}}

# ================================= Variables ============================== {{{

snippet VAR
$1`!p snip.rv = completeVariableType(t[1])`$2

VAR$0
endsnippet

snippet SHELL_INTERPOLATED_VARIABLE
"${1:SHELL_VARIABLE_NAME}": {
	"shell": [ ${2:"echo", "hello", "world"}]
},
endsnippet

snippet SIMPLE_VARIABLE
"${1:NAME}": "${2:VALUE}",
endsnippet

# }}}

# ================================ Programmes ============================== {{{

snippet PROGRAM
$1`!p snip.rv = completeProgramType(t[1])`$0
endsnippet

snippet SIMPLE_PROGRAM
"program": "${1:PROGRAM_NAME}"
endsnippet

snippet PROGRAM_WITH_ARGS
"program": "${1:PROGRAM}",
"args": [${2:"arg1", "arg2", ...}],
endsnippet

# }}}
