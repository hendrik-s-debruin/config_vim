global !p
def complete(t, opts):
	if t:
		opts = [ m[len(t):] for m in opts if m.startswith(t) ]
	if len(opts) == 1:
		return opts[0]
	return '(' + '|'.join(opts) + ')'
endglobal

global !p
def completeCommitType(t):
	opts = [
		"experimental",
		"build",
		"chore",
		"ci",
		"docs",
		"feat",
		"fix",
		"perf",
		"refactor",
		"revert",
		"style",
		"test",
		"tryfix",
		"WIP",
	]
	return complete(t, opts)
endglobal

snippet msg "Conventional commit message" b
$1`!p snip.rv = completeCommitType(t[1])``!p
if len(t[2]) != 0:
	snip.rv = "("
else:
	snip.rv = ""`${2:SCOPE}`!p
if len(t[2]) != 0:
	snip.rv = ")"
else:
	snip.rv = ""`${3:!}: ${4:DESCRIPTION}

${5:BODY}`!p

if len(t[6]) > 0:
	snip.rv = "\n\nCause:\n\n"
else:
	snip.rv = ""
`${6:CAUSE}`!p

if len(t[7]) > 0:
	snip.rv = "\n\nResolution:\n\n"
else:
	snip.rv = ""
`${7:RESOLUTION}`!p

if len(t[8]) > 0:
	snip.rv = "\n\nOther products impacted:\n\n"
else:
	snip.rv = ""
`${8:PRODUCTS}`!p

if len(t[9]) > 0:
	snip.rv = "\n\nVerification Tests:\n\n"
else:
	snip.rv = ""
`${9:TESTS}`!p

if len(t[10]) > 0:
	snip.rv = "\n\nRegression Tests:\n\n"
else:
	snip.rv = ""
`${10:TESTS}`!p

if t[3] == '!':
	snip.rv = "\n\nBREAKING CHANGE: "
else:
	snip.rv =""`$11
endsnippet
